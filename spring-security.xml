<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/security 
    		http://www.springframework.org/schema/security/spring-security.xsd
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans.xsd">
 
 
 	<http auto-config="true">
 		<intercept-url pattern="/welcome" access="ROLE_USER,ROLE_ADMIN"/>
 		<intercept-url pattern="/createEmpPage" access="ROLE_ADMIN"/>
 		<form-login login-page="/login" authentication-failure-url="/login" 
 		always-use-default-target="true" default-target-url="/welcome"/>
 		<logout logout-url="/logout"/>
 		<access-denied-handler error-page="/accessDenied"/>
 	</http>
 	
 	<!-- In-memory authentication -->
 	<!-- <authentication-manager>
 		<authentication-provider>
 			<user-service>
 				<user name="anil" password="kumar" authorities="ROLE_USER"/>
 				<user name="admin" password="verma" authorities="ROLE_ADMIN"/>
 			</user-service>
 		</authentication-provider>
 	</authentication-manager> -->
	
	<!-- Spring Database access using JdbcDaoSupport -->
	<beans:bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://localhost:3306/test"/>
		<beans:property name="username" value="root"/>
		<beans:property name="password" value="root"/>
	</beans:bean>
	
	<!-- jdbc-user authentication -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="myDataSource" 
			users-by-username-query="select username,password,userid from test.userdetails where username=?"
			authorities-by-username-query="select user.username,role.role_name from test.userdetails user 
			inner join test.user_role user_role on user.userid=user_role.userid
			inner join test.roledetails role on role.roleid=user_role.roleid and user.username=?"/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
